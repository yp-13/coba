<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="UTF-8">
  <title>Inventory UMKM Sederhana</title>
  <style>
    body { font-family: sans-serif; padding: 20px; background:#f9fafb; }
    h1 { font-size: 20px; margin-bottom: 10px; }
    .toolbar { margin-bottom: 12px; display:flex; gap:8px; flex-wrap:wrap; }
    .btn { background:#dbeafe; border:1px solid #93c5fd; padding:4px 8px; border-radius:4px; cursor:pointer; }
    table { width:100%; border-collapse:collapse; background:white; }
    th, td { padding:8px; border-bottom:1px solid #e5e7eb; vertical-align:top; }
    th { background:#f3f4f6; text-align:left; }
    .small { font-size:12px; color:#6b7280; }
    .alert { background:#fef3c7; padding:8px; border:1px solid #fcd34d; margin-bottom:10px; border-radius:4px; }
    #chartArea { display:flex; gap:12px; align-items:flex-end; margin-top:12px; }
    .bar { text-align:center; font-size:12px; flex:1; }
    #modal { position:fixed;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,.5);display:none;align-items:center;justify-content:center; }
    #modalContent { background:white;padding:16px;border-radius:6px;width:300px; }
    label { display:block;margin-top:6px;font-size:14px; }
    input { width:100%;padding:4px;margin-top:2px;border:1px solid #d1d5db;border-radius:4px; }
  </style>
</head>
<body>
  <h1>ðŸ“¦ Inventory UMKM</h1>

  <div id="alertLow"></div>

  <div class="toolbar">
    <input id="searchEl" placeholder="Cari..." />
    <select id="filterEl"></select>
    <select id="sortEl">
      <option value="name">Urut Nama</option>
      <option value="stock">Urut Stok</option>
    </select>
    <button class="btn" onclick="openModal()">+ Tambah</button>
    <button class="btn" onclick="exportCSV()">Export CSV</button>
  </div>

  <table>
    <thead>
      <tr>
        <th>Nama Bahan</th>
        <th>Stok</th>
        <th>Satuan</th>
        <th>Min. Stok</th>
        <th>Supplier</th>
        <th>Aksi</th>
      </tr>
    </thead>
    <tbody id="tableBody"></tbody>
  </table>

  <div style="margin-top:10px;font-size:14px">
    Total Bahan: <span id="totalCount">0</span> â€¢ Stok Rendah: <span id="lowCount">0</span>
  </div>

  <h3 style="margin-top:20px">Grafik Stok per Kategori</h3>
  <div id="chartArea"></div>

  <!-- Modal Form -->
  <div id="modal">
    <div id="modalContent">
      <h3 id="modalTitle">Tambah Bahan</h3>
      <form id="form">
        <label>Nama<input id="name" required></label>
        <label>Kategori<input id="category"></label>
        <label>Stok<input id="stock" type="number"></label>
        <label>Satuan<input id="unit" placeholder="kg/pcs/ltr"></label>
        <label>Min. Stok<input id="minStock" type="number"></label>
        <label>Supplier<input id="supplier"></label>
        <label>Catatan<input id="notes"></label>
        <div style="margin-top:10px;display:flex;gap:8px">
          <button class="btn" type="submit">Simpan</button>
          <button class="btn" type="button" onclick="closeModal()">Batal</button>
        </div>
      </form>
    </div>
  </div>

  <script>
    const LS_KEY = 'umkm_inventory_simple_v1';
    const sample = [
      {id:uid(), name:'Tepung Terigu', category:'Bahan Kering', stock:50, unit:'kg', minStock:10, supplier:'CV. Agro', notes:'Protein tinggi'},
      {id:uid(), name:'Gula Aren', category:'Pemanis', stock:20, unit:'kg', minStock:5, supplier:'UD. Manis', notes:'Organik'},
      {id:uid(), name:'Minyak Goreng', category:'Bahan Cair', stock:15, unit:'ltr', minStock:8, supplier:'PT. Minyak', notes:'Refined'}
    ];

    function uid(){ return Math.random().toString(36).slice(2,9) }

    let items = load();
    const $ = sel => document.querySelector(sel);
    const $$ = sel => document.querySelectorAll(sel);
    const tableBody = $('#tableBody');
    const searchEl = $('#searchEl');
    const filterEl = $('#filterEl');
    const sortEl = $('#sortEl');
    const modal = $('#modal');
    const form = $('#form');
    const totalCount = $('#totalCount');
    const lowCount = $('#lowCount');
    const chartArea = $('#chartArea');
    const alertLow = $('#alertLow');
    let editingId = null;

    function escapeHtml(str){ return str?str.replace(/[&<>"']/g, m=>({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[m])):''; }

    function load(){
      try{
        const raw = localStorage.getItem(LS_KEY);
        if(!raw) { localStorage.setItem(LS_KEY, JSON.stringify(sample)); return [...sample]; }
        return JSON.parse(raw);
      }catch(e){
        localStorage.removeItem(LS_KEY); 
        localStorage.setItem(LS_KEY, JSON.stringify(sample)); 
        return [...sample];
      }
    }
    function save(){ 
      localStorage.setItem(LS_KEY, JSON.stringify(items)); 
      render(); 
    }

    function render(){
      const cats = ['Semua', ...Array.from(new Set(items.map(i=>i.category||'(Lainnya)')))];
      filterEl.innerHTML = cats.map(c=>`<option value="${c}">${c}</option>`).join('');

      const q = searchEl.value.trim().toLowerCase();
      const filter = filterEl.value || 'Semua';
      let list = items.filter(i => (filter==='Semua' || (i.category||'(Lainnya)')===filter))
                      .filter(i => i.name.toLowerCase().includes(q) || (i.supplier||'').toLowerCase().includes(q));

      if(sortEl.value==='stock') list.sort((a,b)=>b.stock - a.stock);
      else list.sort((a,b)=>a.name.localeCompare(b.name));

      tableBody.innerHTML = list.map(it => `
        <tr>
          <td>
            <div style="font-weight:600">${escapeHtml(it.name)}</div>
            <div class="small">${escapeHtml(it.category)} â€¢ ${escapeHtml(it.notes)}</div>
          </td>
          <td>${it.stock}</td>
          <td>${escapeHtml(it.unit)}</td>
          <td>${it.minStock||0}</td>
          <td>${escapeHtml(it.supplier)}</td>
          <td>
            <div style="display:flex;gap:6px">
              <button onclick="changeStock('${it.id}',-1)" class="btn">-1</button>
              <button onclick="changeStock('${it.id}',1)" class="btn">+1</button>
              <button onclick="editItem('${it.id}')" class="btn">Edit</button>
              <button onclick="removeItem('${it.id}')" class="btn" style="background:#fee2e2">Hapus</button>
            </div>
          </td>
        </tr>
      `).join('') || '<tr><td colspan="6" style="text-align:center;padding:12px;color:#6b7280">Tidak ada data</td></tr>';

      const low = items.filter(i => Number(i.stock) <= Number(i.minStock || 0));
      alertLow.innerHTML = low.length>0 
        ? `<div class="alert"><strong>Peringatan:</strong> ${low.length} bahan mencapai atau di bawah stok minimum. Segera restock.</div>` 
        : '';

      totalCount.textContent = items.length;
      lowCount.textContent = low.length;

      // chart simple by category
      const map = items.reduce((m,it)=>{ 
        const k=it.category||'(Lainnya)'; 
        m[k]=(m[k]||0)+Number(it.stock); 
        return m 
      },{});
      chartArea.innerHTML = '';
      const values = Object.values(map);
      const max = values.length ? Math.max(...values) : 1;
      Object.entries(map).forEach(([name,st])=>{
        const h = Math.round((st/max)*120) + 'px';
        const div = document.createElement('div');
        div.className='bar';
        div.innerHTML = `<div style="height:${h};background:#60a5fa;border-radius:4px"></div>
                         <div class="small">${escapeHtml(name)}</div>
                         <div class="small" style="margin-top:6px">${st}</div>`;
        chartArea.appendChild(div);
      });
    }

    function changeStock(id, delta){
      items = items.map(i => {
        if(i.id===id){
          let newStock = Number(i.stock)+Number(delta);
          if(newStock < 0) newStock = 0;
          return {...i, stock: newStock};
        }
        return i;
      });
      save();
    }

    function removeItem(id){
      if(confirm('Hapus item ini?')){
        items = items.filter(i=>i.id!==id);
        save();
      }
    }

    function editItem(id){
      const it = items.find(i=>i.id===id);
      if(!it) return;
      editingId = id;
      $('#modalTitle').textContent = 'Edit Bahan';
      $('#name').value = it.name;
      $('#category').value = it.category;
      $('#stock').value = it.stock;
      $('#unit').value = it.unit;
      $('#minStock').value = it.minStock;
      $('#supplier').value = it.supplier;
      $('#notes').value = it.notes;
      modal.style.display='flex';
    }

    function openModal(){
      editingId = null;
      form.reset();
      $('#modalTitle').textContent = 'Tambah Bahan';
      modal.style.display='flex';
    }
    function closeModal(){ modal.style.display='none'; }

    modal.addEventListener('click', e => { if(e.target===modal) closeModal(); });

    form.addEventListener('submit', function(e){
      e.preventDefault();
      const data = {
        id: editingId || uid(),
        name: $('#name').value.trim(),
        category: $('#category').value.trim(),
        stock: Math.max(0, Number($('#stock').value) || 0),
        unit: $('#unit').value.trim() || 'pcs',
        minStock: Math.max(0, Number($('#minStock').value) || 0),
        supplier: $('#supplier').value.trim(),
        notes: $('#notes').value.trim()
      };
      if(!data.name){ alert('Nama bahan harus diisi'); return; }
      if(editingId){
        items = items.map(i => i.id===editingId ? data : i);
      } else {
        items.unshift(data);
      }
      save();
      closeModal();
    });

    function exportCSV(){
      const header = ['id','name','category','stock','unit','minStock','supplier','notes'];
      const rows = items.map(i => header.map(h => `"${(i[h]||'').toString().replace(/\"/g,'""')}"`).join(','));
      const csv = [header.join(','), ...rows].join('\r\n');
      const blob = new Blob([csv], {type:'text/csv'});
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href=url; a.download='inventory_umkm.csv'; a.click(); 
      URL.revokeObjectURL(url);
    }

    // init
    searchEl.oninput = render;
    filterEl.onchange = render;
    sortEl.onchange = render;
    render();
  </script>
</body>
</html>
